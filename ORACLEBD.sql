CREATE DATABASE  ORACLEDB

SELECT 1+1;--ERRO

/*TUDO DENTRO DO ORACLE VEM DE TABELA
TABELA DUMMY - USADA PARA RECURSOS FORA DA TABELA - DUAL*/
SELECT 1+1 FROM DUAL;


--DICIONARIO
SELECT * FROM DICT;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY,
	NOME VARCHAR2(30),
	CARGA INT
)TABLESPACE USERS;

CREATE TABLE TESTE(
	IDTESTE INT,
	NOME VARCHAR2(30)
);

--DICIONARIO DE DADOS

SELECT TABLE_NAME,TABLESPACE_NAME
FROM USER_TABLES;

SELECT TABLE_NAME,TABLESPACE_NAME
FROM USER_TABLES
WHERE TABLE_NAME = 'CURSOS';

--FAZENDO BACKUP

CREATE TABLESPACE RECURSOS_HUMANOS
DATAFILE 'C:/DATA/RH_01.DBF'
SIZE 100M AUTOEXTEND
IN NEXT 100M
MAXSIZE 4096M;

ALTER TABLESPACE RECURSOS_HUMANOS
ADD DATAFILE 'C:/DATA/RH_02.DBF'
SIZE 200M AUTOEXTEND
ON NEXT 200M
MAXSIZE 4096M;

--VERIFICANDO A TABLESPACE

SELECT TABLESPACE_NAME,FILE_NAME FROM DBA_DATA_FILES;

--SEQUENCES

CREATE SEQUENCE SEQ_GERAL
START WITH 100
INCREMENT BY 10;

CREATE TABLE FUNCIONARIOS(
IDFUNCONARIO INT PRIMARY KEY,
NOME VARCHAR2(30)
)TABLESPACE RECURSOS_HUMANOS;

--COLOCANDO TS OFFLINE

ALTER TABLESPACE RECURSOS_HUMANOS OFFLINE;--COPIE OS DADOS

-- APONTAR O DICIONARIO DE DADOS

ALTER TABLESPACE RECURSOS_HUMANOS
RENAME DATAFILE 'C:/DATA/RH_01.DBF' TO 'C:/BACKUP/RH_01.DBF'

ALTER TABLESPACE RECURSOS_HUMANOS
RENAME DATAFILE 'C:/DATA/RH_02.DBF' TO 'C:/BACKUP/RH_02.DBF'

--TORNANDO A TS ONLINE

ALTER TABLESPACE RECURSOS_HUMANOS ONLINE;

CREATE TABLE ALUNO(
	IDALUNO INT PRIMARY KEY;
	NOME VARCHAR2(30),
	EMAIL VARCHAR2(30),
	SALARIO NUMBER(10,2)
);

CREATE SEQUENCE SEQ_EXEMPLO;

INSERT INTO ALUNO VALUES(SEQ_EXEMPLO.NEXTVAL,'JOAO','JOAO@GMAIL.COM',1000.00);
INSERT INTO ALUNO VALUES(SEQ_EXEMPLO.NEXTVAL,'NIC','NIC@GMAIL.COM',4500.00);
INSERT INTO ALUNO VALUES(SEQ_EXEMPLO.NEXTVAL,'PAULA','PAULA@GMAIL.COM',2000.00);
INSERT INTO ALUNO VALUES(SEQ_EXEMPLO.NEXTVAL,'JAO','JAO@GMAIL.COM',1000.00);

SELECT * FROM ALUNO;

--PROCEDURE

CREATE OR REPLACE PROCEDURE BONUS(P_IDALUNO ALUNO.IDALUNO%TYPE,PORCENTAGEM NUMBER)
AS 
	BEGIN
		UPDATE ALUNO SET SALARIO = SALARIO+(SALARIO+ (PORCENTAGEM/100))
		WHERE P_IDALUNO = P_IDALUNO;

	END;
	/

CALL AUMENTO(3,10);

--VALIDACAO

CREATE OR REPLACE TRIGGER CHECK_SAL
BEFORE INSERT OR UPDATE ON ALUNO
FOR EACH ROW
BEGIN
	IF :NEW.SALARIO < 2000 THEN
	RAISE_APPLICATION_ERROR(-2000,'VALOR INCORRETO');
	END IF;
END; 
/

--PROCURANDO ERRO

SHOW ERRORS;

-- TRIGGER DE AUDITORIA

CREATE TABLE AUDITORIA(
	DATA_LOGIN INT,
	LOGIN VARCHAR2(30)
);

CREATE OR REPLACE PROCEDURE LOGPROC IS 
BEGIN
	INSERT INTO AUDITORIA(DATA_LOGIN,LOGIN)
	VALUES(SYSDATE,USER);
END LOGPROC;
/

SELECT USER FROM DUAL;

CREATE OR REPLACE TRIGGER LOGTRIGGER
AFTER LOGON ON DATABASE
CALL LOGPROC
/

--FALHA DE LOGON

CREATE OR REPLACE TRIGGER FALHA_LOGON
AFTER SERVERERROR ON DATABASE
BEGIN
	IF(IS_SERVERERROR(1017)) THEN
		INSERT INTO AUDITORIA(DATA_LOGIN,LOGIN)
		VALUES(SYSDATE,'ORA-1017');
	END IF;
END FALHA_LOGON;
/

CREATE TABLE USUARIO(
	ID INT,
	NOME VARCHAR2(30)
);

CREATE TABLE BKP_USER(
id int,
nome varchar2(30)
);

INSERT INTO USUARIO VALUES(1,'JOAO');
INSERT INTO USUARIO VALUES(2,'CLARA');

CREATE OR REPLACE TRIGGER LOG_USUARIO
BEFORE DELETE ON LOG_USUARIO
FOR EACH ROW
BEGIN
	INSERT INTO BKP_USER VALUES(:OLD.ID,:OLD.NOME)
END;
/

CREATE OR REPLACE VIEW V_CLIENTE_RO
AS 
	SELECT IDCLIENTE,NOME,SEXO FROM CLIENTE 
	WITH READ ONLY;
INSERT INTO V_CLIENTE_RO VALUES(1009,'LILIAN','F');

--VIEW DE JOIN

CREATE OR REPLACE VIEW RELATORIO
AS 
	SELECT NOME,SEXO,NUMERO FROM CLIENTE 
	INNER JOIN TELEFONE ON IDCLIENTE = ID_CLIENTE;

--FORCE

CREATE OR REPLACE FORCE VIEW RELATORIO
AS 
	SELECT NOME,SEXO,NUMERO FROM CLIENTE 
	INNER JOIN TELEFONE ON IDCLIENTE = ID_CLIENTE;

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY,
	NUMERO VARCHAR(10),
	ID_CLIENTE IN 
);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TEL
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE

INSERT INTO TELEFONE VALUES(1,'13435890',1007);

CREATE TABLE FUNCIONARIO(
IDFUNCIONARIO INT CONSTRAINT PK_FUNCIONARIO PRIMARY KEY,
NOME VARCHAR2(100)
);

DROP TABLE TELEFONE;

CREATE TABLE TEL(
	IDTELEFONE INT PRIMARY KEY,
	NUMERO VARCHAR2(10),
	ID_FUNCIONARIO INT
);

ALTER TABLES TEL ADD CONSTRAINT FK_CLIENTE_TEL
FOREIGN KEY(ID_FUNCIONARIO) REFERENCES FUNCIONARIO;

INSERT INTO FUNCIONARIO VALUES(1,'MAURICIO');
INSERT INTO TEL VALUES(10,'2346124',1);

-- APAGANDO CONSTRAINT

ALTER TABLE TEL DROP CONSTRAINT FK_TEL;

--RECRIANDO

ALTER TABLE TEL ADD CONSTRAINT FK_TEL 
FOREIGN KEY(ID_FUNCIONARIO) REFERENCES FUNCIONARIO
DEFERRABLE;

SELECT CONSTRAINT_NAME, DEFERRABLE AS ATRASADA,DEFERRED AS VERIFICACAO
FROM USER_CONSTRAINTS WHERE TABLE_NAME IN('FUNCIONARIO','TEL');